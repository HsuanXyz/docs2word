{"version":3,"sources":["../../src/read-file.js"],"names":["readFile","list","filePath","stat","then","isDirectory","walk","console","log","e","filter","test","directory","includeDir","results","map","call","readdir","file","join","isFile","push","sep","filesInDir","concat"],"mappings":";;;;;kBAgBwBA,Q;;AAbxB;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;AARA;;;AAcA,IAAIC,OAAO,EAAX;;AAEe,SAASD,QAAT,CAAkBE,QAAlB,EAA4B;AACvC,WAAO,aAAGC,IAAH,CAAQD,QAAR,EACFE,IADE,CACG,gBAAQ;AACV;AACA,YAAGD,KAAKE,WAAL,EAAH,EAAsB;AAClBC,iBAAKJ,QAAL,EACKE,IADL,CACU,aAAK;AACPG,wBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAAU;AAAA,2BAAK,QAAOC,IAAP,CAAYF,CAAZ;AAAL;AAAA,iBAAV,CAAZ;AACH,aAHL;AAKH,SAND,MAMM;AACF;AACA,mBAAO,aAAGT,QAAH,CAAYE,QAAZ,EAAqB,OAArB,CAAP;AACH;AACJ,KAbE,CAAP;AAcH;;AAED,SAASI,IAAT,CAAeM,SAAf,EAA0BC,UAA1B,EAAsC;AAClC,QAAIC,UAAU,EAAd;AACA,WAAO,eAAKC,GAAL,CAAS,mBAAOC,IAAP,CAAY,aAAGC,OAAf,EAAwBL,SAAxB,CAAT,EAA6C,UAASM,IAAT,EAAe;AAC/DA,eAAO,eAAKC,IAAL,CAAUP,SAAV,EAAqBM,IAArB,CAAP;AACA,eAAO,mBAAOF,IAAP,CAAY,aAAGb,IAAf,EAAqBe,IAArB,EAA2Bd,IAA3B,CAAgC,UAASD,IAAT,EAAe;AAClD,gBAAIA,KAAKiB,MAAL,EAAJ,EAAoB;AAAE,uBAAON,QAAQO,IAAR,CAAaH,IAAb,CAAP;AAA4B;AAClD,gBAAIL,UAAJ,EAAgB;AAAEC,wBAAQO,IAAR,CAAaH,OAAO,eAAKI,GAAzB;AAAgC;AAClD,mBAAOhB,KAAKY,IAAL,EAAWL,UAAX,EAAuBT,IAAvB,CAA4B,UAASmB,UAAT,EAAqB;AACpDT,0BAAUA,QAAQU,MAAR,CAAeD,UAAf,CAAV;AACH,aAFM,CAAP;AAGH,SANM,CAAP;AAOH,KATM,EASJnB,IATI,CASC,YAAW;AACf,eAAOU,OAAP;AACH,KAXM,CAAP;AAYH","file":"read-file.js","sourcesContent":["/**\n * Created by hsuanlee on 16/05/2017.\n */\nimport fs from 'mz/fs'\nimport path from 'path'\nimport when from 'when'\nimport nodefn from 'when/node/function'\n\n/**\n * 读取文件内容\n * @param filePath {string}\n * @returns Promise<string>\n */\n\nlet list = [];\n\nexport default function readFile(filePath) {\n    return fs.stat(filePath)\n        .then(stat => {\n            // 判断是否为目录\n            if(stat.isDirectory()){\n                walk(filePath)\n                    .then(e => {\n                        console.log(e.filter( e => /\\.md/.test(e)))\n                    })\n\n            }else {\n                // 如果是文件直接返回文件内容\n                return fs.readFile(filePath,'utf-8')\n            }\n        });\n}\n\nfunction walk (directory, includeDir) {\n    let results = [];\n    return when.map(nodefn.call(fs.readdir, directory), function(file) {\n        file = path.join(directory, file);\n        return nodefn.call(fs.stat, file).then(function(stat) {\n            if (stat.isFile() ) { return results.push(file); }\n            if (includeDir) { results.push(file + path.sep); }\n            return walk(file, includeDir).then(function(filesInDir) {\n                results = results.concat(filesInDir);\n            });\n        });\n    }).then(function() {\n        return results\n    });\n}"]}