{"version":3,"sources":["../main.js"],"names":["main","version","file","process","argv","outputPath","console","log","then","words","res","Promise","resolve","result"],"mappings":";;;;;kBAewBA,I;;AAZxB;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,oBACKC,OADL,CACa,OADb;AAEA;AACA;AAZA;;;AAaAD;;AAEe,SAASA,IAAT,GAAgB;;AAE3B,QAAIE,OAAOC,QAAQC,IAAR,CAAa,CAAb,CAAX;;AAEA,QAAIC,aAAaF,QAAQC,IAAR,CAAa,CAAb,CAAjB;;AAEA,QAAG,CAACF,IAAJ,EAAS;AACLI,gBAAQC,GAAR,CAAY,UAAZ;AACA;AACH;;AAED,QAAG,CAACF,UAAJ,EAAe;AACX,eAAOC,QAAQC,GAAR,CAAY,SAAZ,CAAP;AACH;;AAED,wBAASL,IAAT,EAAe,OAAf,EACKM,IADL,CACU,eAAO;;AAET;AACA,YAAIC,QAAQ,8BAAc,0BAAUC,GAAV,CAAd,CAAZ;;AAEA;AACA,eAAO,qBAAUD,KAAV,EAAiBJ,UAAjB,EACFG,IADE,CACI;AAAA,mBAAMG,QAAQC,OAAR,CAAgBH,KAAhB,CAAN;AAAA,SADJ,CAAP;AAEH,KATL,EAUKD,IAVL,CAUU,eAAO;AACT,YAAIK,SAASH,GAAb;AACAJ,gBAAQC,GAAR,CAAYM,MAAZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,KA3BL;AA4BH","file":"main.js","sourcesContent":["/**\n * Created by hsuanlee on 16/05/2017.\n */\nimport commander from 'commander'\nimport {readFile, writeTemp, writeResult} from './src/file'\nimport {parseWord, wordFrequency} from './src/parse-word'\nimport { getTranslation } from './src/translation'\nimport when from 'when'\n\ncommander\n    .version('0.0.1')\n// .option('-l, --list [list]', 'list')\n// .parse(process.argv)\nmain();\n\nexport default function main() {\n\n    let file = process.argv[2];\n\n    let outputPath = process.argv[3];\n\n    if(!file){\n        console.log('请指定背翻译路径');\n        return;\n    }\n\n    if(!outputPath){\n        return console.log('请指定输出路径')\n    }\n\n    readFile(file, 'utf-8')\n        .then(res => {\n\n            // 生成单词数组\n            let words = wordFrequency(parseWord(res));\n\n            // 创建缓存文件\n            return writeTemp(words, outputPath)\n                .then( () => Promise.resolve(words))\n        })\n        .then(res => {\n            let result = res;\n            console.log(result)\n            // result.splice(980,result.length-980);\n            //\n            // when.map(result, (e,i) => {\n            //     return getTranslation(e.name)\n            //         .then( w => {\n            //             // console.log(JSON.parse(w))\n            //             result[i].tr = w;\n            //         });\n            // })\n            //     .then( () => {\n            //         console.log(result)\n            //         writeResult(result)\n            //     })\n\n        });\n}\n\n\n"]}